vector<vector<int>> leveloreder(treenode* root){
    std::vector<vector<int>> ans;
    if(root==NULL) return ans;
    queue<treenode*> q;
    q.push(root);

    while(!q.empty()){
        int size= q.size();
        vector<int> level;
        for (int i = 0; i < size; ++i)
        {
            treenode* node= q.front();
            q.pop();
            if(node->left!= NULL) q.push(node->left);
            if(node->right!= NULL) q.push(node->right);
            level.push_back(node->val);
        }
        ans.push_back(level);
    }
    return ans;
};

//TIME AND SPACE COPLEXITY : O(n);//